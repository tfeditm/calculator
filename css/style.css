/*\\\\ A SIMPLE CSS RESET FROM ERIC MEYER ///////*/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

/*\\\\ SCSS variables ///////*/
/***
width = height = radius = ((.buttons width - 4 * grid-gap) / 4);
.buttons width = the viewport width - 2 * (body padding + calculator padding + border + border padding) = 100vw - 2 * (1.8vh + 1.8vh + 0.36vh + 3.6vh) = 100vw - 15.12vh;
grid-gap = 2vh;
***/
/*\\\\ BASE STYLES ///////*/
* {
  box-sizing: border-box;
}

html, body {
  /***
  The max-width of calculator is 60vh. If the width of the viewport is bigger than calculator's max-width, the reference font-size is the viewport heigth, otherwise the reference font-size is the viewport width.
  ***/
  font-size: 4.8vw;
}
@media (min-width: 63.6vh) {
  html, body {
    font-size: 3vh;
  }
}
@media (orientation: portrait) and (min-height: 193.6vw) {
  html, body {
    /* If the viewport is extrem narrow.*/
    font-size: 4vw;
  }
}

body {
  background-color: black;
}

.calculator {
  background-color: #8f0a13;
}

.border {
  box-shadow: -1px 0 1px white, 0 2px 3px black, 2px 0 6px black, 0 -1px 1px white, 2px 0 4px black inset, -1px 0 1px white inset, -2px 0 1px black inset;
}

h1 {
  font-family: "Pacifico", cursive;
  font-weight: 400;
  color: #ded4ab;
  text-align: center;
  font-size: 1.8rem;
}
h1 span {
  background-color: #8f0a13;
  text-shadow: -1px 0 1px white, 0 1px 1px black, 2px 0 1px black, 0 -1px 1px white;
}

/*\\\\ LAYOUT STYLES ///////*/
h1, .display {
  margin-bottom: 6.3vh;
}
@media (orientation: portrait) and (min-height: 193.6vw) {
  h1, .display {
    /* If the viewport is extrem narrow the reference is the viewport width*/
    margin-bottom: 15vw;
  }
}

body {
  padding: 1.8vh;
}

.calculator {
  margin: 0 auto;
  height: 96.4vh;
  max-height: 190vw;
  max-width: 60vh;
  border-radius: 36vh/5.4vh;
  padding: 5.4vh 1.8vh 1.8vh;
}

.border {
  height: 100%;
  border: 0.36vh solid #ded4ab;
  border-radius: 36vh/5.4vh;
  padding: 3.6vh;
}

h1 {
  margin-top: -5.4vh;
  line-height: 1;
}
h1 span {
  padding: 0 3.6vh;
}

/*\\\\ COMPONENT STYLES ///////*/
.display {
  font-family: "Cabin", sans-serif;
  font-weight: 400;
  background-color: #071211;
  padding: 1.8vh 1.8vh 0;
  border-radius: 1.8vh/0.72vh;
  box-shadow: -1px -1px 1px rgba(222, 212, 171, 0.5) inset, 0 0 1px black inset;
  max-height: 18%;
  overflow: hidden;
}

.display div {
  color: #ded4ab;
  text-align: right;
}

#entry {
  font-size: 1.6rem;
  line-height: 1.6;
  max-width: 100%;
}

#entry-history {
  font-size: 0.8rem;
  height: 0.9rem;
  overflow-y: hidden;
  overflow-x: auto;
}

.buttons {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: repeat(5, 1fr);
  justify-content: end;
  align-content: stretch;
  width: 100%;
  height: 54vh;
}
@media (orientation: portrait) and (min-height: 193.6vw) {
  .buttons {
    /* If the viewport is extrem narrow. */
    height: 100vw;
  }
}

button {
  justify-self: center;
  align-self: center;
  font-family: "Cabin", sans-serif;
  font-weight: 400;
  font-size: 1.4rem;
  text-shadow: 0 0 1px black;
  background-color: #ded4ab;
  width: calc((100vw - 23.12vh) / 4);
  height: calc((100vw - 23.12vh) / 4);
  border-radius: 50%;
  border: 0.09vh solid #ded4ab;
  box-shadow: -1px 0 1px white, 0 2px 3px black, 2px 0 6px black, 0 -1px 1px white, 2px 0 4px black inset, -1px 0 1px white inset, -2px 0 1px black inset;
  margin: 0;
  cursor: pointer;
  padding: 0;
  -webkit-transition-duration: 0.4s;
  /* Safari */
  transition-duration: 0.4s;
}
@media (min-width: 63.6vh) {
  button {
    width: 9.2vh;
    height: 9.2vh;
  }
}
button:hover {
  background-color: #c5b56d;
  border-color: #c5b56d;
  outline: none;
}
button:focus {
  outline: none;
}
button:active {
  transform: scale(0.9, 0.9);
  background-color: #6d612c;
  border-color: #6d612c;
}

.delete {
  background-color: #deabae;
  border-color: #deabae;
}
.delete:hover {
  background-color: #c56d72;
  border-color: #c56d72;
}
.delete:active {
  background-color: #6d2c2f;
  border-color: #6d2c2f;
}

.operator {
  background-color: #abdec4;
  border-color: #abdec4;
}
.operator:hover {
  background-color: #6dc599;
  border-color: #6dc599;
}
.operator:active {
  background-color: #2c6d4d;
  border-color: #2c6d4d;
}

.plus {
  grid-column: 4 / 5;
  grid-row: 3 / span 2;
  height: calc((54vh - 5 * calc((100vw - 23.12vh) / 4)) / 5 + 2 * calc((100vw - 23.12vh) / 4));
  /* the .buttons height is 54vh*/
  border-radius: calc((100vw - 23.12vh) / 4);
}
@media (min-width: 63.6vh) {
  .plus {
    width: 9.2vh;
    height: calc((54vh - 5 * 9.2vh) / 5 + 2 * 9.2vh);
    border-radius: 9.2vh;
  }
}
@media (orientation: portrait) and (min-height: 193.6vw) {
  .plus {
    height: calc((100vw - 5 * calc((100vw - 23.12vh) / 4)) / 5 + 2 * calc((100vw - 23.12vh) / 4));
    /* If the viewport is extrem narrow the .buttons height is 100vw */
  }
}

.null {
  grid-column: 1 / span 2;
  grid-row: 5 / 6;
  width: calc(((100vw - 15.12vh) - 4 * calc((100vw - 23.12vh) / 4)) / 4 + 2 * calc((100vw - 23.12vh) / 4));
  /***
  width: ((the .buttons width - 4 * button width) / 4 + 2 * button width);
  the .buttons width = 100vw - 15.12vh;
  ***/
  border-radius: calc((100vw - 23.12vh) / 4);
}
@media (min-width: 63.6vh) {
  .null {
    width: calc(((60vh - 11.52vh) - 4 * 9.2vh) / 4 + 2 * 9.2vh);
    /***
    width: ((the .buttons width - 4 * button width) / 3 + 2 * button width);
    the .buttons width = 60vh - 11.52vh;
    button width = 9.2vh;
    ***/
  }
}

/*\\\\ ENTRY HISTORY SCROLLBAR STYLE ///////*/
.wrapper-entry-history {
  overflow-x: auto;
  white-space: nowrap;
}

#entry-history {
  display: inline-block;
  width: auto;
  margin-bottom: 30px;
}

.mCS-rounded.mCSB_scrollTools
.mCSB_draggerRail {
  display: none;
}

.mCS-rounded.mCSB_scrollTools
.mCSB_dragger {
  display: none;
}

.mCS-rounded.mCSB_scrollTools .mCSB_dragger .mCSB_dragger_bar {
  display: none;
}

.mCS-rounded.mCSB_scrollTools_horizontal .mCSB_dragger {
  display: none;
}

.mCS-rounded.mCSB_scrollTools_horizontal .mCSB_dragger .mCSB_dragger_bar {
  display: none;
}

.mCSB_scrollTools.mCSB_scrollTools_horizontal {
  width: auto;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 99999;
}

.mCSB_scrollTools .mCSB_buttonLeft:hover,
.mCSB_scrollTools .mCSB_buttonRight:hover {
  opacity: 0.85;
  filter: "alpha(opacity=85)";
  -ms-filter: "alpha(opacity=85)";
}

.mCSB_scrollTools .mCSB_buttonLeft:active,
.mCSB_scrollTools .mCSB_buttonRight:active {
  opacity: 0.99;
  filter: "alpha(opacity=99)";
  -ms-filter: "alpha(opacity=99)";
}
